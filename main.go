package main

import (
	"cloud.google.com/go/firestore"
	"context"
	"github.com/gin-gonic/gin"
	"google.golang.org/api/option"
	"log"
	"net/http"
)

const GCP_PROJECT_ID = "cve-alert"

const GCP_FIRESTORE_CRED_PATH string = "./sa-firestore.json"

func main() {
	ctx := context.Background()

	// Setup Firestore library - https://pkg.go.dev/cloud.google.com/go/firestore
	firestoreClient, firestoreError := firestore.NewClient(ctx, GCP_PROJECT_ID, option.WithCredentialsFile(GCP_FIRESTORE_CRED_PATH))

	if firestoreError != nil {
		log.Fatalf("Error whilst loading Firestore library: " + firestoreError.Error())
	}

	/* GIN Releated here */
	router := gin.Default()

	router.Use(func(context *gin.Context) {
		context.Set("firestore", firestoreClient)
		context.Next()
	})

	// TODO - Add this as some sort of health check
	router.GET("/", func(c *gin.Context) {
		c.JSON(http.StatusOK, gin.H{"data": "Setup works well"})
	})

	router.Run(":5000")
}